{"version":3,"sources":["../../server/services/ArticleService.js"],"names":["ArticleService","database","Article","findAll","newArticle","create","id","updateArticle","findOne","where","Number","articleToUpdate","update","theArticle","articleToDelete","destroy"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;IAEMA,c;;;;;;;;;;;;;;;;;;;uBAGaC,mBAASC,OAAT,CAAiBC,OAAjB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAMOC,U;;;;;;;uBAEPH,mBAASC,OAAT,CAAiBG,MAAjB,CAAwBD,UAAxB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAMUE,E,EAAIC,c;;;;;;;;uBAEGN,mBAASC,OAAT,CAAiBM,OAAjB,CAAyB;AACrDC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAD8C,iBAAzB,C;;;AAAxBK,gBAAAA,e;;qBAIFA,e;;;;;;uBACIV,mBAASC,OAAT,CAAiBU,MAAjB,CAAwBL,cAAxB,EAAuC;AAAEE,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAAT,iBAAvC,C;;;kDAECC,c;;;kDAGF,I;;;;;;;;;;;;;;;;;;;;;;;;;;qDAMaD,E;;;;;;;;uBAEKL,mBAASC,OAAT,CAAiBM,OAAjB,CAAyB;AAChDC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADyC,iBAAzB,C;;;AAAnBO,gBAAAA,U;kDAICA,U;;;;;;;;;;;;;;;;;;;;;;;;;;qDAMgBP,E;;;;;;;;uBAEOL,mBAASC,OAAT,CAAiBM,OAAjB,CAAyB;AACrDC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAD8C,iBAAzB,C;;;AAAxBQ,gBAAAA,e;;qBAIFA,e;;;;;;uBACWb,mBAASC,OAAT,CAAiBa,OAAjB,CAAyB;AACpCN,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAD6B,iBAAzB,C;;;;;;kDAKR,I;;;;;;;;;;;;;;;;;;;;;;;;;eAOEN,c","sourcesContent":["import database from '../models';\n\nclass ArticleService {\n  static async getAllArticles() {\n    try {\n      return await database.Article.findAll();\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async addArticle(newArticle) {\n    try {\n      return await database.Article.create(newArticle);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async updateArticle(id, updateArticle) {\n    try {\n      const articleToUpdate = await database.Article.findOne({\n        where: { id: Number(id) }\n      });\n\n      if (articleToUpdate) {\n        await database.Article.update(updateArticle, { where: { id: Number(id) } });\n\n        return updateArticle;\n      }\n\n      return null;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async getArticle(id) {\n    try {\n      const theArticle = await database.Article.findOne({\n        where: { id: Number(id) }\n      });\n\n      return theArticle;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async deleteArticle(id) {\n    try {\n      const articleToDelete = await database.Article.findOne({\n        where: { id: Number(id) }\n      });\n\n      if (articleToDelete) {\n        return await database.Article.destroy({\n          where: { id: Number(id) }\n        });\n      }\n\n      return null;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\nexport default ArticleService;\n"],"file":"ArticleService.js"}