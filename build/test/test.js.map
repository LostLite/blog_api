{"version":3,"sources":["../../server/test/test.js"],"names":["chai","use","chaiHttp","expect","describe","it","done","article","title","description","body","request","app","post","set","send","end","err","res","status","to","equal","data","include","id","article2","get","should","have","property","articleId","error","invalidArticleId","eql","nonNumericId","updateArticleId","updateArticle","put","invalidUpdateId","updateArticle2","updatedArticle"],"mappings":"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","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport 'chai/register-should';\nimport app from '../../app';\n\nchai.use(chaiHttp);\nconst { expect } = chai;\n\ndescribe('Testing the articles endpoints:', () => {\n  it('it should create an article', (done) => {\n    const article = {\n      title: 'First Article',\n      description: 'Ddescription of article goes here',\n      body: 'Article body goes here'\n    };\n    chai.request(app)\n      .post('/api/v1/articles')\n      .set('Accept', 'application/json')\n      .send(article)\n      .end((err, res) => {\n        expect(res.status).to.equal(201);\n        expect(res.body.data).to.include({\n          id: 1,\n          title: article.title,\n          description: article.description,\n          body: article.body\n        });\n        done();\n      });\n  });\n\n  it('It should not create an article with incomplete details', (done) => {\n    const article2 = {\n      title: 'First Article',\n      description: 'Ddescription of article goes here'\n    };\n\n    chai.request(app)\n      .post('/api/v1/articles')\n      .set('Accept', 'application/json')\n      .send(article2)\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        done();\n      });\n  });\n\n  it('It should get all article', (done) => {\n    chai.request(app)\n      .get('/api/v1/articles')\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        res.body.data[0].should.have.property('id');\n        res.body.data[0].should.have.property('title');\n        res.body.data[0].should.have.property('description');\n        res.body.data[0].should.have.property('body');\n        done();\n      });\n  });\n\n  it('It should get a particular article', (done) => {\n    const articleId = 1;\n\n    chai.request(app)\n      .get(`/api/v1/articles/${articleId}`)\n      .set('Accept', 'application/json')\n      .end((error, res) => {\n        expect(res.status).to.equal(200);\n        res.body.data.should.have.property('id');\n        res.body.data.should.have.property('title');\n        res.body.data.should.have.property('description');\n        res.body.data.should.have.property('body');\n        done();\n      });\n  });\n\n  it('It should not get an article with an invalid ID', (done) => {\n    const invalidArticleId = 9999;\n\n    chai.request(app)\n      .get(`/api/v1/articles/${invalidArticleId}`)\n      .set('Accept', 'application/json')\n      .end((error, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message')\n          .eql(`Could not find article with that Id: ${invalidArticleId}`);\n        done();\n      });\n  });\n\n  it('It should not get an article with a non-numeric ID', (done) => {\n    const nonNumericId = 'Goats';\n    chai.request(app)\n      .get(`/api/v1/articles/${nonNumericId}`)\n      .set('Accept', 'application/json')\n      .end((error, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message')\n          .eql('Please provide a valid ID');\n        done();\n      });\n  });\n\n  it('It should update an article', (done) => {\n    const updateArticleId = 1;\n    const updateArticle = {\n      id: updateArticleId,\n      title: 'Updated article',\n      description: 'Updated description',\n      body: 'Update body'\n    };\n\n    chai.request(app)\n      .put(`/api/v1/articles/${updateArticleId}`)\n      .set('Accept', 'application/json')\n      .send(updateArticle)\n      .end((error, res) => {\n        expect(res.status).to.equal(200);\n        expect(res.body.data.title).to.equal(updateArticle.title);\n        expect(res.body.data.description).to.equal(updateArticle.description);\n        expect(res.body.data.body).to.equal(updateArticle.body);\n        done();\n      });\n  });\n\n  it('It should not update an article with an invalid ID', (done) => {\n    const invalidUpdateId = 99999;\n    const updateArticle2 = {\n      id: invalidUpdateId,\n      title: 'Update Me',\n      description: 'Update me too',\n      body: 'Forget me not bruh'\n    };\n\n    chai.request(app)\n      .put(`/api/v1/articles/${invalidUpdateId}`)\n      .set('Accept', 'application/json')\n      .send(updateArticle2)\n      .end((error, res) => {\n        expect(res.status).to.equal(404);\n        res.body.should.have.property('message')\n          .eql(`Cannot find article with the provided Id ${invalidUpdateId}`);\n        done();\n      });\n  });\n\n  it('It should not update a article with non-numeric id value', (done) => {\n    const articleId = 'ggg';\n    const updatedArticle = {\n      id: articleId,\n      title: 'Updated Awesome article again',\n      body: '$11.99',\n      description: 'We have updated the body'\n    };\n    chai.request(app)\n      .put(`/api/v1/articles/${articleId}`)\n      .set('Accept', 'application/json')\n      .send(updatedArticle)\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message')\n          .eql('Provide a valid numeric value');\n        done();\n      });\n  });\n\n\n  it('It should delete a article', (done) => {\n    const articleId = 1;\n    chai.request(app)\n      .delete(`/api/v1/articles/${articleId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        expect(res.body.data).to.include({});\n        done();\n      });\n  });\n\n  it('It should not delete a article with invalid id', (done) => {\n    const articleId = 777;\n    chai.request(app)\n      .delete(`/api/v1/articles/${articleId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(404);\n        res.body.should.have.property('message')\n          .eql(`Article with the id ${articleId} cannot be found`);\n        done();\n      });\n  });\n\n  it('It should not delete a article with non-numeric id', (done) => {\n    const articleId = 'bbb';\n    chai.request(app)\n      .delete(`/api/v1/articles/${articleId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message').eql('Please provide a numeric value');\n        done();\n      });\n  });\n});\n"],"file":"test.js"}